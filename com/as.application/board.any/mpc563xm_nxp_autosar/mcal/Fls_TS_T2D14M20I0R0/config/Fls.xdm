<?xml version='1.0'?>

<datamodel version="3.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/08/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/08/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

<!--
===================================================================================================

   @file        Fls.xml
   @version     2.0.0

   @brief       AUTOSAR Fls_TS_T2D14M20I0R0 - Tresos Studio plugin schema file
   @details     This file contains the schema configuration for and Fls Tresos Studio plugin.

   Project      : AUTOSAR 3.0 MCAL
   Platform     : PA
   Peripheral   : Flash_Memory
   Dependencies : 

   Autosar Version       : 3.0.0
   Autosar Revision      : ASR_REL_3_0_REV_0003
   Autosar Conf. Variant : 
   Software Version      : 2.0.0
   Build Version         : XPC563xM_MCAL_2_0_0_RTM_ASR_REL_3_0_REV_0003_20111223

   (c) Copyright 2006-2011 by Freescale Semiconductor Inc and STMicroelectronics
   All rights exclusively reserved for Freescale Semiconductor Inc and STMicroelectronics, 
   unless expressly agreed to otherwise.

===================================================================================================
===================================================================================================
-->

  <d:ctr type="AUTOSAR" factory="autosar"  
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_T2D14M20I0R0" type="AR-PACKAGE">
      <a:a name="UUID" value="ECUC:a3b7d7bc-7daf-4535-b867-12b487011080"/>
        <d:lst type="ELEMENTS">
          <d:chc name="Fls_AUTOSARParameterDefinition" type="AR-ELEMENT" value="ECU_PARAMETER_DEFINITION">
            <d:ctr type="AR-ELEMENT">
              <a:a name="DEF" value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
              <a:a name="UUID" value="ECUC:b3038d99-2e52-48a5-9e46-3e464e8e029d"/>
              <d:lst name="MODULE_REF">
                <d:ref type="MODULE_REF" value="ASPath:/TS_T2D14M20I0R0/Fls"/>
              </d:lst>
            </d:ctr>
          </d:chc>
          <d:chc name="Fls" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <d:ref type="REFINED_MODULE_DEF" value="ASPath:/AUTOSAR/Fls"/>
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>revision1.0.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>Freescale</ad:ISSUED-BY>
                      <ad:DATE>2009-05-14T17:00:00</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>              
              <a:a name="DESC">
                <a:v>
                <![CDATA[<html><p>                
                  Configuration of the Fls (internal or external flash driver) module.
                Its multiplicity describes the number of flash drivers present, so there will be one container for each flash driver in the ECUC template. When no flash driver is present then the multiplicity is 0.
                </p></html>]]>
               </a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="1"/>
              <a:a name="UPPER-MULTIPLICITY" value="*"/>
              <a:a name="UUID" value="ECUC:d806fbe9-737c-4697-8714-0047aa3f95e0"/>

              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="LABEL" value="Config Variant"/>
                <a:a name="DESC">
                    <a:v>
                        <![CDATA[<html>
                            <p>VariantPostBuild: Mix of precompile and postbuild time configuration parameters.
                            If Config Variant = VariantPostBuild, the files Fls_Cfg.h and Fls_PBcfg.c should be used.</p>
                         </html>]]>
                    </a:v>                    
                </a:a>
                <a:da name="DEFAULT" value="VariantPostBuild"/>
                <a:da name="RANGE">
                  <a:v>VariantPostBuild</a:v>
                </a:da>
              </v:var>
              <v:lst name="FlsConfigSet" 
                     type="MULTIPLE-CONFIGURATION-CONTAINER">
                <a:da name="MIN" value="1"/>
                <v:ctr name="FlsConfigSet" 
                       type="MULTIPLE-CONFIGURATION-CONTAINER">
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>                
                      Container for runtime configuration parameters of the flash driver.<br>
                    Implementation Type: Fls_ConfigType.
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="UUID" value="ECUC:7846b7a8-ce94-46f9-b1f8-c3d3769ec866"/>
                  <v:var name="FlsAcErase" type="FUNCTION-NAME">
                    <a:a name="LABEL" value="Fls Access Code Erase"/>
                    <a:a name="DESC">
                      <a:v>
                      <![CDATA[<html><p>
                        Address offset in RAM to which the erase flash access code shall be loaded.
                      Used as function pointer to access the erase flash access code.<br>
                      Note: To use Fls Access Code Erase be sure Fls Access Code Erase Pointer is NULL or NULL_PTR.
                      </p></html>]]>
                    </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:429ca491-9be9-4a60-880f-015ae97abd9d"/>
                    <a:da name="DEFAULT" value="0x40002500"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'(^0x[0-9a-fA-F]+$)|(^[0-9]+$)')"
                        false="Invalid address offset in RAM. Must be decimal or hexadecimal (0x) number."/>
                      <a:tst expr="text:match(normalize-space(.),'^0x[0-9a-fA-F]+$') and num:hextoint(normalize-space(.)) mod 4 != 0 or text:match(normalize-space(.),'^[0-9]+$') and num:i(normalize-space(.)) mod 4 != 0"
                        true="Invalid address offset in RAM. Must be integer multiple of 4."/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsAcWrite" type="FUNCTION-NAME">
                  <a:a name="LABEL" value="Fls Access Code Write"/>
                    <a:a name="DESC">
                      <a:v>
                      <![CDATA[<html><p>
                        Address offset in RAM to which the write flash access code shall be loaded.
                      Used as function pointer to access the write flash access code.<br>
                      Note: To use Fls Access Code Write be sure Fls Access Code Write Pointer is NULL or NULL_PTR.
                      </p></html>]]>
                      </a:v>                  
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:e5080765-2671-4eb6-a8a6-08e85ad78daf"/>
                    <a:da name="DEFAULT" value="0x40002500"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'(^0x[0-9a-fA-F]+$)|(^[0-9]+$)')"
                        false="Invalid address offset in RAM. Must be decimal or hexadecimal (0x) number."/>
                      <a:tst expr="text:match(normalize-space(.),'^0x[0-9a-fA-F]+$') and num:hextoint(normalize-space(.)) mod 4 != 0 or text:match(normalize-space(.),'^[0-9]+$') and num:i(normalize-space(.)) mod 4 != 0"
                        true="Invalid address offset in RAM. Must be integer multiple of 4."/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsAcErasePointer" type="FUNCTION-NAME">
                    <a:a name="LABEL" value="Fls Access Code Erase Pointer"/>
                    <a:a name="DESC">
                      <a:v>
                      <![CDATA[<html><p>
                        Pointer in RAM to which the erase flash access code shall be loaded.
                      </p></html>]]>
                    </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:186c77da-6c50-42e4-bb8e-f76450340b80"/>
                    <a:da name="DEFAULT" value="NULL_PTR"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                        false="Invalid name of the Fls Access Code Erase Pointer. Must be valid C function name, NULL_PTR, or NULL."/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsAcWritePointer" type="FUNCTION-NAME">
                  <a:a name="LABEL" value="Fls Access Code Write Pointer"/>
                    <a:a name="DESC">
                      <a:v>
                      <![CDATA[<html><p>
                        Pointer in RAM to which the write flash access code shall be loaded.
                      Used as function pointer to access the write flash access code.
                      </p></html>]]>
                      </a:v>                  
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:6f951c40-414c-4932-b159-62c91f560e69"/>
                    <a:da name="DEFAULT" value="NULL_PTR"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                        false="Invalid name of the Fls Access Code Write Pointer. Must be valid C function name, NULL_PTR, or NULL."/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsCallCycle" type="FLOAT">
                  <a:a name="LABEL" value="Fls Call Cycle"/>
                    <a:a name="DESC">
                      <a:v>
                      <![CDATA[<html><p>
                        Cycle time of calls of the flash driver main function<br><br><b>Note</b>&nbsp;&nbsp;Not supported by the driver.
                      </p></html>]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:13c635e4-a45f-4b12-b8a2-64dc1aeea1a2"/>
                    <a:da name="DEFAULT" value="0.0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=0"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                    <a:da name="EDITABLE" value="false"/>
                  </v:var>
                  <v:var name="FlsACCallback" type="FUNCTION-NAME">
                  <a:a name="LABEL" value="Fls AC Callback"/>
                    <a:a name="DESC">
                        <a:v>
                        <![CDATA[<html><p>
                              Mapped to the Access Routine Callback provided by some upper layer module, typically the Wdg module. 
                        </p></html>]]>
                        </a:v>
                        </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:9ef411be-2c1a-4d5e-9153-5a14a83edc77"/>
                    <a:da name="DEFAULT" value="NULL_PTR"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                        false="Invalid name of the the job error notification routine. Must be valid C function name, NULL_PTR, or NULL."/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsJobEndNotification" type="FUNCTION-NAME">
                  <a:a name="LABEL" value="Fls Job End Notification"/>
                    <a:a name="DESC">
                      <a:v>
                        <![CDATA[<html><p>
                            Mapped to the job end notification routine provided by some upper layer module, typically the Fee module.
                        </p></html>]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:26524d5b-bc98-46ca-9056-5717d2c4d37d"/>
                    <a:da name="DEFAULT" value="NULL_PTR"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                        false="Invalid name of the the job end notification routine. Must be valid C function name, NULL_PTR, or NULL."/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsJobErrorNotification" type="FUNCTION-NAME">
                  <a:a name="LABEL" value="Fls Job Error Notification"/>
                    <a:a name="DESC">
                        <a:v>
                        <![CDATA[<html><p>
                              Mapped to the job error notification routine provided by some upper layer module, typically the Fee module. 
                        </p></html>]]>
                        </a:v>
                        </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:4fcbba64-7222-4e9b-89a5-3026c09743e2"/>
                    <a:da name="DEFAULT" value="NULL_PTR"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z][_0-9a-zA-Z]*$')"
                        false="Invalid name of the the job error notification routine. Must be valid C function name, NULL_PTR, or NULL."/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsMaxReadFastMode" type="INTEGER">
                  <a:a name="LABEL" value="Fls Max Read FastMode"/>
                    <a:a name="DESC">
                     <a:v>
                        <![CDATA[<html><p>
                             The maximum number of bytes to read or compare in one cycle of the flash driver&apos;s job processing function in fast mode.
                        </p></html>]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:2605350b-8543-4554-92e5-5262074c7a74"/>
                    <a:da name="DEFAULT" value="1048576"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=2147483647"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsMaxReadNormalMode" type="INTEGER">
                   <a:a name="LABEL" value="Fls Max Read Normal Mode"/>
                    <a:a name="DESC">
                        <a:v>
                        <![CDATA[<html><p>
                            The maximum number of bytes to read or compare in one cycle of the flash driver&apos;s job processing function in normal mode.
                        </p></html>]]>
                        </a:v>
                    </a:a>
                   <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:24be52a9-f8cc-4dfc-83b2-80db5eedbeee"/>
                    <a:da name="DEFAULT" value="1024"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=2147483647"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsMaxWriteFastMode" type="INTEGER">
                  <a:a name="LABEL" value="Fls Max Write Fast Mode"/>
                    <a:a name="DESC">
                        <a:v>
                        <![CDATA[<html><p>
                            The maximum number of bytes to write in one cycle of the flash driver&apos;s job processing function in fast mode. 
                        </p></html>]]>
                        </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:0f9fb70b-deac-4b08-8288-538ea733433f"/>
                    <a:da name="DEFAULT" value="256"/>
                    <a:da name="RANGE" type="XPath">
                        <a:tst expr="node:fallback( ., 8 ) > 0 and node:fallback( ., 8 ) mod 8 = 0" false="Must be greater than zero and integer multiple of the page size."/>
                        <a:tst expr=" (node:fallback(../../../FlsGeneral/FlsCancelApi,'') = 'true') and 
                                      node:exists(node:fallback(../../../../../../Fee/ELEMENTS/Fee/FeeGeneral/FeeVirtualPageSize,'')) = 'true'  and .  &lt; 16"
                                    true="When Fls Cancel API is enabled and FEE driver is used, FlsMaxWriteFastMode cannot be less than Fee Block header (16 bytes)" />
                    </a:da>
                    <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=2147483647"/>
                        <a:tst expr="&gt;=8"/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsMaxWriteNormalMode" type="INTEGER">
                   <a:a name="LABEL" value="Fls Max Write Normal Mode"/>
                    <a:a name="DESC">
                        <a:v>
                        <![CDATA[<html><p>
                              The maximum number of bytes to write in one cycle of the flash driver&apos;s job processing function in normal mode. 
                        </p></html>]]>
                        </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:d421470b-729d-4288-8af1-fec020502ec0"/>
                    <a:da name="DEFAULT" value="8"/>
                    <a:da name="RANGE" type="XPath">
                        <a:tst expr="node:fallback( ., 8 ) > 0 and node:fallback( ., 8 ) mod 8 = 0" false="Must be greater than zero and integer multiple of the page size."/>
                        <a:tst expr=" (node:fallback(../../../FlsGeneral/FlsCancelApi,'') = 'true') and 
                                      node:exists(node:fallback(../../../../../../Fee/ELEMENTS/Fee/FeeGeneral/FeeVirtualPageSize,'')) = 'true'  and .  &lt; 16"
                                    true="When Fls Cancel API is enabled and FEE driver is used, FlsMaxWriteNormalMode cannot be less than Fee Block header (16 bytes)" />
                    </a:da>
                    <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=2147483647"/>
                        <a:tst expr="&gt;=8"/>
                    </a:da>
                  </v:var>
                  <v:var name="FlsProtection" type="INTEGER">
                  <a:a name="LABEL" value="Fls Protection"/>
                    <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>
                        Erase/write protection settings. Only relevant if supported by hardware.<br><br><b>Note</b>&nbsp;&nbsp;Not supported by the driver.
                      </p></html>]]>
                      </a:v></a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:c7d409f9-807b-4c0a-91ab-d08573adc41c"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=0"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <v:ctr name="FlsSectorList" type="IDENTIFIABLE">
                    <a:a name="LABEL" value="Fls SectorList"/>
                    <a:a name="DESC">
                        <a:v>
                        <![CDATA[<html><p>
                          List of flashable sectors and pages. 
                        </p></html>]]>
                        </a:v>
                        </a:a>
                    <a:a name="UUID" 
                         value="ECUC:d35f22f0-8cc1-47c9-b646-6a5f08ca3e3f"/>
                    <v:lst name="FlsSector" type="MAP">
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="FlsSector" type="IDENTIFIABLE">
                       <a:a name="LABEL" value="Fls Sector"/>
                        <a:a name="DESC">
                            <a:v>
                            <![CDATA[<html><p>
                              Configuration description of a flashable sector 
                            </p></html>]]>
                            </a:v>
                            </a:a>
                        <a:a name="UUID" 
                             value="ECUC:8d7cbf34-c271-4618-8351-6895e158cd63"/>
                        <v:var name="FlsPhysicalSectorUnlock" type="BOOLEAN">
                         <a:a name="LABEL" value="Fls Physical Sector Unlock"/>
                          <a:a name="DESC">
                          <a:v>
                            <![CDATA[<html><p>
                              FlsPhysicalSector the Fls_Init ensures unlock modify operation for this Flash Physical Sector, it is not possible to lock until a new reset.<br><br><b>Note</b>&nbsp;&nbsp;Vendor specific parameter
                            </p></html>]]>
                            </a:v>
                        </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Freescale"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:268c5b56-b75d-4386-88ac-b3ffc7314d63"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                        <v:var name="FlsPhysicalSector" type="ENUMERATION">
                         <a:a name="LABEL" value="Fls Physical Sector"/>
                          <a:a name="DESC">
                            <a:v>
                            <![CDATA[ <html><p> 
                              Physical flash device sector.
                            </p></html>]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Freescale"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:862ee7ca-d19b-4325-a287-10dab719b089"/>
                          <a:da name="DEFAULT" type="XPath" expr="text:split(text:replaceAll(concat(' ',text:join(ecu:list('Fls.Sector.Physical.List'))),' [0-9a-fA-F]+_',' '))[position()-1 = node:fallback(node:current()/../@index, '0')]"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="text:uniq(../../*/FlsPhysicalSector,.)" false="This physical sector is already in use."/>
                          </a:da>
                          <a:da name="RANGE" type="XPath" expr="text:split(text:replaceAll(concat(' ',text:join(ecu:list(&apos;Fls.Sector.Physical.List&apos;))),' [0-9a-fA-F]+_',' '))"/>
                        </v:var>
                        <v:var name="FlsNumberOfSectors" type="INTEGER">
                             <a:a name="LABEL" value="Fls Number Of Sector"/>
                          <a:a name="DESC">
                          <a:v>
                            <![CDATA[<html><p>
                              Number of continuous sectors with the above characteristics.<br><br><b>Note</b>&nbsp;&nbsp;Not supported by the driver.
                            </p></html>]]>
                            </a:v></a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:f36a2a7d-7f3a-4575-a785-052ba61cded2"/>
                          <a:da name="DEFAULT" value="1"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=1"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                          <a:da name="EDITABLE" value="false"/>
                        </v:var>
                        <v:var name="FlsPageSize" type="INTEGER">
                          <a:a name="LABEL" value="Fls Page Size"/>
                          <a:a name="DESC">
                            <a:v>
                              <![CDATA[<html><p>
                                Size of one page of this sector. Implementation Type: Fls_LengthType.
                                <ul>
                                    <li>For Code Flash page size is 8 byte</li>
                                    <li>For Data Flash page size is 8 byte</li>
                                    <li>For Data Flash Optimized (DFO) page size is 4 byte</li>
                                </ul>
                              </p></html>]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:b95bb349-16e8-409c-b602-42186caac8c9"/>
                          <a:da name="DEFAULT" type="XPath" expr="num:i(node:when(text:match(node:fallback(../FlsPhysicalSector, 'None'),'[D][F][O]'),4,8))"/>
                          <a:da name="RANGE" type="XPath">
                            <a:tst expr="node:fallback( ., 0 ) = num:i(node:when(text:match(node:fallback(../FlsPhysicalSector, 'None'),'[D][F][O]'),4,8))" 
                                   false="Page Size should be 4 for DFO and 8 for Others"/>
                          </a:da>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=8"      false="Page Size should be &lt;=8."/>
                            <a:tst expr="&gt;=4"      false="Page Size should be &gt;=4."/>
                          </a:da>
                        </v:var>
                        <v:var name="FlsSectorSize" type="INTEGER">
                             <a:a name="LABEL" value="Fls Sector Size"/>
                          <a:a name="DESC">
                            <a:v>
                            <![CDATA[<html><p> 
                                Size of this sector. <br>Implementation Type: Fls_LengthType.
                            </p></html>]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:d1023610-26dd-48c3-aaee-5d77e62b01bf"/>
                          <a:da name="DEFAULT" type="XPath" expr="num:hextoint(substring-before(text:grep(ecu:list('Fls.Sector.Physical.List'),concat('^[0-9a-zA-Z]+_', node:fallback(../FlsPhysicalSector, substring-after(ecu:list('Fls.Sector.Physical.List')[1], '_')),'.*'))[1],'_'))"/>
                          <a:da name="RANGE" type="XPath">
                            <a:tst expr="(node:fallback( ., 0 ) = num:hextoint(substring-before(text:grep(ecu:list('Fls.Sector.Physical.List'),concat('^[0-9a-zA-Z]+_', node:fallback(../FlsPhysicalSector, substring-after(ecu:list('Fls.Sector.Physical.List')[1], '_')),'.*'))[1],'_')))" false="Size of this sector shall match size of the assigned physical sector (FlsPhysicalSector). Hit the calc button to calculate the matching value."/>
                          </a:da>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=524288"      false="Sector size should be &lt;=524288."/>
                            <a:tst expr="&gt;=0"           false="Sector size should be &gt;=0."/>
                          </a:da>                  
                        </v:var>
                        <v:var name="FlsSectorStartaddress" type="INTEGER">
                             <a:a name="LABEL" value="Fls Sector Start Address"/>
                          <a:a name="DESC">
                            <a:v>
                            <![CDATA[<html><p> 
                              "Fls Sector Start Address" is a logical address. 
                               Start address of the first sector will be always start at address 0 and continues without any gap.<br>
                            Implementation Type: Fls_AddressType.
                           </p></html>]]>
                           </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:121f6131-e69f-40f0-b314-bfe697fb36fa"/>
                          <a:da name="DEFAULT" type="XPath" expr="num:integer(node:fallback(../../*[position() = node:current()/../@index]/FlsSectorSize,0) + node:fallback(../../*[position() = node:current()/../@index]/FlsSectorStartaddress,0))"/>
                          <a:da name="RANGE" type="XPath">
                            <a:tst expr="(node:fallback( ../@index, 0 )  = 0 and node:fallback( ., 0 ) != 0)" true="Start address of the first sector shall be 0"/>
                            <a:tst expr="(node:fallback( ../@index, 0 ) != 0 and node:fallback( ., 0 ) != (../../*[position() = node:current()/../@index]/FlsSectorSize + ../../*[position() = node:current()/../@index]/FlsSectorStartaddress))" true="Invalid start address of the sector. Hit the calc button to calculate correct value."/> -->
                          </a:da>                               
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=2147483647"  false="Sector address should be &lt;=2147483647."/>
                            <a:tst expr="&gt;=0"           false="Sector address should be &gt;=0."/>
                          </a:da>
                        </v:var>
                        <v:var name="FlsSectorEraseAsynch" type="BOOLEAN">
                         <a:a name="LABEL" value="Fls Sector Erase Asynch"/>
                          <a:a name="DESC">
                          <a:v>
                            <![CDATA[<html><p>
                              Enable asynchronous execution of the erase job in the Fls_MainFunction function which doesn't wait (block) for completion of the sector erase operation. The flash driver doesn't use the erase access code to the erase flash sector in asynchronous mode so it can be used only on flash sectors which belong to flash array different from flash array the application is executing from.<br><br><b>Note</b>&nbsp;&nbsp;Vendor specific parameter
                            </p></html>]]>
                            </a:v>
                        </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Freescale"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>                          
                          <a:a name="UUID" value="ECUC:1b404503-d9a0-437c-8799-ee47af828edc"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="FlsPageWriteAsynch" type="BOOLEAN">
                         <a:a name="LABEL" value="Fls Page Write Asynch"/>
                          <a:a name="DESC">
                           <a:v>
                           <![CDATA[<html><p>
                              Enable asynchronous execution of the write job in the Fls_MainFunction function which doesn't wait (block) for completion of the page write operation(s). The flash driver doesn't use the write access code to the write flash page(s) in asynchronous mode so it can be used only on flash sectors which belong to flash array different from flash array the application is executing from.<br><br><b>Note</b>&nbsp;&nbsp;Vendor specific parameter
                            </p></html>]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Freescale"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:4a08e9e5-7674-4bf4-9aed-f4c273f2c6d4"/>
                          <a:da name="INVALID" type="XPath">
                             <a:tst expr="../../../../../../FlsGeneral/FlsCancelApi = 'true' and . = 'true' and
                                          node:exists(node:fallback(../../../../../../../../../Fee/ELEMENTS/Fee/FeeGeneral/FeeVirtualPageSize,'')) = 'true' "
                                    true="When Fls Cancel API is enabled and FEE driver is used, Write Async mode cannot be used."/>
                          </a:da>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>                
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                </v:ctr>
              </v:lst>
              <v:ctr name="FlsGeneral" type="IDENTIFIABLE">
                   <a:a name="LABEL" value="Fls General"/>
                <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>
                          Container for general parameters of the flash driver. These parameters are always pre-compile.
                    </p></html>]]>
                    </a:v>
                </a:a>
                <a:a name="UUID" value="ECUC:9ed9024d-71d6-4361-ba8c-e10a0c7c1b6b"/>
                <v:var name="FlsAcLoadOnJobStart" type="BOOLEAN">
                           <a:a name="LABEL" value="Fls Load Access Code On Job Start"/>
                  <a:a name="DESC">                  
                    <a:v>
                    <![CDATA[<html><p> 
                        The flash driver shall load the flash access code to RAM whenever an erase or write job is started and unload (overwrite) it after that job has been finished or canceled.<br>
                        true: Flash access code loaded on job start / unloaded on job end  or error.<br>
                        false:  Flash access code not loaded to / unloaded from RAM at all.
                    </p></html>]]>
                     </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:c2369a59-2d02-4d2d-aae6-65ea21d18ff6"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FlsBaseAddress" type="INTEGER">
                       <a:a name="LABEL" value="Fls Base Address"/>
                  <a:a name="DESC">
                  <a:v>
                  <![CDATA[
                    <html><p>
                      The flash memory start address (see also FLS118). <br>
                      FLS169: This parameter defines the lower boundary for read / write / erase and compare jobs.<br><br><b>Note</b>&nbsp;&nbsp;Not needed / supported by the driver.
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:ce2a09cd-dcbe-4d8d-9f8f-87e5b4f6811b"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=0"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="FlsCancelApi" type="BOOLEAN">
                       <a:a name="LABEL" value="Fls Cancel Api"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p> 
                      Compile switch to enable and disable the Fls_Cancel function.<br>
                      true: API supported / function provided.<br>
                      false:  API not supported / function not provided<br><br>
                      <b>Note</b>&nbsp;&nbsp;when FlsCancelApi is enabled, only synchronous write mode can be set
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:415a180b-c9b1-4809-ac7d-abb0aacb0cd3"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsCompareApi" type="BOOLEAN">
                  <a:a name="LABEL" value="Fls Compare Api"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p> 
                      Compile switch to enable and disable the Fls_Compare function.<br>
                      true: API supported / function provided.<br>
                      false:  API not supported / function not provided
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:56d207ae-3d3e-4f70-94a8-798ded0720bf"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsDevErrorDetect" type="BOOLEAN">
                      <a:a name="LABEL" value="Fls Development Error Detect"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p> 
                      Pre-processor switch to enable and disable development error detection (see FLS077).<br>
                      true: Development error detection enabled.<br>
                      false:  Development error detection disabled.
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:1260d0c6-6a1a-4e59-8e95-2ebe5e746c66"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsDriverIndex" type="INTEGER">
                  <a:a name="LABEL" value="Fls Driver Index"/>
                  <a:a name="DESC">
                      <a:v>
                        <![CDATA[<html><p>  Index of the driver, used by FEE. </p></html>]]>
                      </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                  <a:a name="UUID" value="ECUC:1255860d-d662-419f-bc92-33858574330b"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=254"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsGetJobResultApi" type="BOOLEAN">
                     <a:a name="LABEL" value="Fls Get Job Result Api"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p> 
                      Compile switch to enable and disable the Fls_GetJobResult function.<br>
                      true: API supported / function provided.<br>
                      false:  API not supported / function not provided
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:cda82055-3228-4dbd-8c68-423e334b8769"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsGetStatusApi" type="BOOLEAN">
                 <a:a name="LABEL" value="Fls Get Status Api"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p> 
                      Compile switch to enable and disable the Fls_GetStatus function.<br>
                      true: API supported / function provided.<br>
                      false:  API not supported / function not provided
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:04a560f3-e86a-4fb4-9767-218328d5e3c4"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsSetModeApi" type="BOOLEAN">
                             <a:a name="LABEL" value="Fls Set Mode Api"/>
                  <a:a name="DESC">
                  <a:v>
                    <![CDATA[<html><p> 
                      Compile switch to enable and disable the Fls_SetMode function.<br>
                      true: API supported / function provided.<br>
                      false:  API not supported / function not provided
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:df77cc4c-906c-4c88-9f7e-02ef619bc309"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsTotalSize" type="INTEGER">
                 <a:a name="LABEL" value="Fls Total Size"/>
                  <a:a name="DESC">
                  <a:v>
                  <![CDATA[<html><p>
                      The total amount of flash memory in bytes (see also FLS118). FLS170: This parameter in conjunction with FLS_BASE_ADDRESS defines the upper boundary for read / write / erase and compare jobs.<br><br>
                      <b>Note</b>&nbsp;&nbsp;Not needed / supported by the driver.
                    </p></html>]]>
                    </a:v>
                    </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:f8bab6d6-2069-48d6-8a9f-6052f39ae10f"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=0"/>
                    <a:tst expr="&gt;=0"/> 
                  </a:da>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="FlsUseInterrupts" type="BOOLEAN">
                     <a:a name="LABEL" value="Fls Use Interrupts"/>
                  <a:a name="DESC">
                  <a:v>
                  <![CDATA[<html><p>
                      Job processing triggered by hardware interrupt. <br>true: Job processing triggered by interrupt (hardware controlled)<br> false: Job processing not triggered by interrupt (software controlled)<br><br><b>Note</b>&nbsp;&nbsp;Not supported by hardware.
                    </p></html>]]>
                   </a:v>
                    </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:81e0c077-650f-4fca-a14d-033f5970f32a"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="FlsVersionInfoApi" type="BOOLEAN">
                         <a:a name="LABEL" value="Fls Version Info Api"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p> 
                          Pre-processor switch to enable / disable the API to read out the modules version information.<br>
                        true: Version info API enabled.<br>
                        false:  Version info API disabled.
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:dd49597b-2587-41fe-9bcc-0357d25777d1"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsDsiHandlerApi" type="BOOLEAN">
                         <a:a name="LABEL" value="Fls Dsi Handler Api"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>
                          Pre-processor switch to enable / disable the API to report data storage (ECC) errors to the flash driver.<br>
                        true: Data storage handler API enabled.<br>
                        false:  Data storage handler API disabled.
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:8c3cb4ac-7f38-4d86-95d2-e4a85a00006d"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FlsDsiHandlerInclude" type="STRING">
                             <a:a name="LABEL" value="Fls Dsi Handler Include"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>
                          Data storage exception handler include file.
                     </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:bc4cd88a-0108-45a1-95af-adb6c0849487"/>
                  <a:da name="DEFAULT" value="Exc_Types.h"/>
                </v:var>
                <v:var name="FlsEraseBlankCheck" type="BOOLEAN">
                             <a:a name="LABEL" value="Fls Erase Blank Check"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>
                          Pre-processor switch to enable / disable the erase blank check. After a flash block has been erased, the erase blank check compares the contents of the addressed memory area against the value of an erased flash cell to check that the block has been completely erased.<br>
                        true: Erase blank check enabled.<br>
                        false:  Erase blank check disabled.
                        <br><b>Note</b>&nbsp;&nbsp;Vendor specific parameter
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:cc1df56b-c96d-4e92-b7c9-e1787ba2ab33"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsWriteBlankCheck" type="BOOLEAN">
                     <a:a name="LABEL" value="Fls Write Blank Check"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p> 
                          Pre-processor switch to enable / disable the write blank check. Before writing a flash block, the write blank check compares the contents of the addressed memory area against the value of an erased flash cell to check that the block has been completely erased.<br>
                        true: Write blank check enabled.<br>
                        false:   Write blank check disabled.
                        <br><b>Note</b>&nbsp;&nbsp;Vendor specific parameter
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:60a39d62-a9ac-4f33-90df-c80822807cb5"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsWriteVerifyCheck" type="BOOLEAN">
                     <a:a name="LABEL" value="Fls Write Verify Check"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p> 
                          Pre-processor switch to enable / disable the write verify check. After writing a flash block, the write verify check compares the contents of the reprogrammed memory area against the contents of the provided application buffer to check that the block has been completely reprogrammed.<br>
                          true: Write verify check enabled.<br>
                          false:  Write verify check disabled.
                          <br><b>Note</b>&nbsp;&nbsp;Vendor specific parameter
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:0537e62f-c8f5-44b3-b70e-d7f233424a36"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FlsMaxEraseBlankCheck" type="INTEGER">
                 <a:a name="LABEL" value="Fls Max Erase Blank Check"/>
                  <a:a name="DESC">
                    <a:v>
                        <![CDATA[<html><p>
                          The maximum number of bytes to blank check in one cycle of the flash driver&apos;s job processing function. Affects only the flash blocks that have enabled asynchronous execution of the erase job (FlsSectorEraseAsynch=true).
                          <br><b>Note</b>&nbsp;&nbsp;Vendor specific parameter
                        </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID"
                       value="ECUC:442f2bd0-0795-4718-9cdd-953dd6b8877a"/>
                  <a:da name="DEFAULT" value="256"/>
                  <a:da name="RANGE" type="XPath">
                    <a:tst expr="node:fallback( ., 8 ) > 0 and node:fallback( ., 8 ) mod 8 = 0" false="Must be greater than zero and integer multiple of the page size."/>
                  </a:da>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&gt;=8"      false="Minimum number of bytes should be &gt;=8."/>
                    <a:tst expr="&lt;=65536"  false="Maximum number of bytes should be &lt;=65536."/>
                  </a:da>
                </v:var>
                <v:var name="FlsOperationTimeout" type="INTEGER">
                 <a:a name="LABEL" value="Fls Operation Timeout"/>
                  <a:a name="DESC">
                  <a:v>
                  <![CDATA[<html><p>
                      Fls Operation Timeout is the timeout value for Write and Erase Operation (also used fot resumed oparation) 
                      <br>
                      <br><b>Note</b>&nbsp;&nbsp;Vendor specific parameter
                    </p></html>]]>
                    </a:v>
                    </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:5a565377-f9c2-4638-b325-35655bbd2f07"/>
                  <a:da name="DEFAULT" value="2147483647"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=2147483647"/>
                    <a:tst expr="&gt;=0"/> 
                  </a:da>
                </v:var>
                <v:var name="FlsAbortTimeout" type="INTEGER">
                 <a:a name="LABEL" value="Fls Abort Timeout"/>
                  <a:a name="DESC">
                  <a:v>
                  <![CDATA[<html><p>
                      Fls Abort Timeout is the timeout value for Abort operation
                      <br>
                      <br><b>Note</b>&nbsp;&nbsp;Vendor specific parameter
                    </p></html>]]>
                    </a:v>
                    </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Freescale"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:578f5e46-f1cd-4451-9006-78409792dd6d"/>
                  <a:da name="DEFAULT" value="32767"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=2147483647"/>
                    <a:tst expr="&gt;=0"/> 
                  </a:da>
                </v:var>
              </v:ctr>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                       <a:a name="LABEL" value="Common Published Information"/>
                <!-- /** @remarks Covers BSW00374, BSW00318 */ -->
                    <a:a name="DESC">
                        <a:v>
                            <![CDATA[
                                <html>
                                <h1>CommonPublishedInformation</h1>
                                <p>Common container, aggregated by all modules. It contains published information about vendor and versions.</p>
                                </html>
                            ]]>
                        </a:v>
                    </a:a>
                    <a:a name="UUID"
                         value="ECUC:95f76b7a-a424-423c-a11c-806cbb2ff897"/>
                    <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                        <a:a name="LABEL" value="AUTOSAR Major Version"/>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[
                                    <html>
                                    <h1>AUTOSAR Major Version</h1>
                                    <p>Major version number of AUTOSAR specification on which the appropriate implementation is based on.</p>
                                    </html>
                                ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                             value="PublishedInformation"/>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID"
                             value="ECUC:1d976382-42a9-4902-ba3e-8b4f0dafb411"/>
                        <a:da name="DEFAULT" value="2"/>
                        <a:da name="INVALID" type="Range">
                            <a:tst expr="&gt;=2"/>
                            <a:tst expr="&lt;=2"/>
                        </a:da>                    
                    </v:var>
                    <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                        <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[
                                    <html>
                                    <h1>AUTOSAR Minor Version</h1>
                                    <p>Minor version number of AUTOSAR specification on which the appropriate implementation is based on.</p>
                                    </html>
                                ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                             value="PublishedInformation"/>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID"
                             value="ECUC:66149787-5357-44be-973b-a592b136c1a7"/>
                        <a:da name="DEFAULT" value="2"/>
                        <a:da name="INVALID" type="Range">
                            <a:tst expr="&gt;=2"/>
                            <a:tst expr="&lt;=2"/>
                        </a:da>                    
                    </v:var>
                    <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                        <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[
                                    <html>
                                    <h1>AUTOSAR Patch Version</h1>
                                    <p>Patch version number of AUTOSAR specification on which the appropriate implementation is based on.</p>
                                    </html>
                                ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                             value="PublishedInformation"/>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID"
                             value="ECUC:51e676e5-5727-4126-be9a-0eecd68f054b"/>
                        <a:da name="DEFAULT" value="2"/>
                        <a:da name="INVALID" type="Range">
                            <a:tst expr="&gt;=2"/>
                            <a:tst expr="&lt;=2"/>
                        </a:da>  
                    </v:var>
                    <v:var name="ModuleId" type="INTEGER_LABEL">
                        <a:a name="LABEL" value="Numeric Module ID"/>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[
                                    <html>
                                    <h1>Module ID</h1>
                                    <p>Module ID of this module.</p>
                                    </html>
                                ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                             value="PublishedInformation"/>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID"
                             value="ECUC:684ec5c6-de44-41ab-8492-1292f4f11899"/>
                        <a:da name="DEFAULT" value="92"/>
                        <a:da name="INVALID" type="Range">
                            <a:tst expr="&gt;=92"/>
                            <a:tst expr="&lt;=92"/>
                        </a:da>                          
                    </v:var>
                    <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                        <a:a name="LABEL" value="Software Major Version"/>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[
                                    <html>
                                    <h1>Software Major Version</h1>
                                    <p>Major version number of the vendor specific implementation of the module. The numbering is vendor specific.</p>
                                    </html>
                                ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                             value="PublishedInformation"/>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID"
                             value="ECUC:9ea8db4f-0504-435d-9a8d-5f3c72e76c4b"/>
                        <a:da name="DEFAULT" value="2"/>
                        <a:da name="INVALID" type="Range">
                            <a:tst expr="&gt;=2"/>
                            <a:tst expr="&lt;=2"/>
                        </a:da>                          
                    </v:var>
                    <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                        <a:a name="LABEL" value="Software Minor Version"/>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[
                                    <html>
                                    <h1>Software Minor Version</h1>
                                    <p>Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.</p>
                                    </html>
                                ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                             value="PublishedInformation"/>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID"
                             value="ECUC:62f7d5a2-9095-49e6-9690-cedba11a4f51"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="INVALID" type="Range">
                            <a:tst expr="&gt;=0"/>
                            <a:tst expr="&lt;=0"/>
                        </a:da>                             
                    </v:var>
                    <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                        <a:a name="LABEL" value="Software Patch Version"/>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[
                                    <html>
                                    <h1>Software Patch Version</h1>
                                    <p>Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.</p>
                                    </html>
                                ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                             value="PublishedInformation"/>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID"
                             value="ECUC:20cecd14-f1f8-428f-b9b9-e6d2a5b22d45"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="INVALID" type="Range">
                            <a:tst expr="&gt;=0"/>
                            <a:tst expr="&lt;=0"/>
                        </a:da>                            
                    </v:var>
                    <v:var name="VendorApiInfix" type="STRING_LABEL">
                        <a:a name="LABEL" value="Vendor Api Infix"/>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[
                                    <html>
                                    <h1>Vendor Api Infix</h1>
                                    <p>In driver modules which can be instantiated several times on a single ECU, BSW00347 requires that the name of APIs is extended by the VendorId and a vendor specific name.
                                    This parameter is used to specify the vendor specific name. In total, the implementation specific name is generated as follows:
                                    &lt;ModuleName&gt;_&gt;VendorId&gt;_&lt;VendorApiInfix&gt;&lt;Api name from SWS&gt;.
                                    E.g.  assuming that the VendorId of the implementor is 123 and the implementer chose a VendorApiInfix of &quot;v11r456&quot; a api name Can_Write defined in the SWS will translate to Can_123_v11r456Write.
                                    This parameter is mandatory for all modules with upper multiplicity &gt; 1. It shall not be used for modules with upper multiplicity =1.
                                    </p>
                                    </html>
                                ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                        value="PublishedInformation"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID"
                        value="ECUC:0f1a880a-b7ec-4501-9b33-b2edd2988e3a"/>
                        <a:da name="DEFAULT" value=""/>
                        <a:da name="ENABLE" value="false"/>
                    </v:var>
                    <v:var name="VendorId" type="INTEGER_LABEL">
                        <a:a name="LABEL" value="Vendor ID"/>
                        <a:a name="DESC">
                            <a:v>
                                <![CDATA[
                                    <html>
                                    <h1>Vendor ID</h1>
                                    <p>Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list.</p>
                                    </html>
                                ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                             value="PublishedInformation"/>
                        <a:a name="ORIGIN" value="Freescale"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID"
                        value="ECUC:e56a4520-9b83-4d41-a2fa-e1cd612e6172"/>
                        <a:da name="DEFAULT" value="43"/>
                        <a:da name="INVALID" type="Range">
                            <a:tst expr="&gt;=43"/>
                            <a:tst expr="&lt;=43"/>
                        </a:da>                            
                    </v:var>
                </v:ctr>
              <v:ctr name="FlsPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>
                  <![CDATA[<html><p>
                    Additional published parameters not covered by CommonPublishedInformation container.
                    Note that these parameters do not have any configuration class setting, since they are published information.
                    </p></html>]]>
                    </a:v>
                </a:a>
                <a:a name="UUID" value="ECUC:e511b742-3dfd-4be7-86c2-e6e35c9834c9"/>
                <v:var name="FlsAcLocationErase" type="INTEGER_LABEL">
                 <a:a name="LABEL" value="Fls Access Code Location Erase"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>
                      Position in RAM, to which the erase flash access code has to be loaded. 
                    Only relevant if the erase flash access code is not position independent. If this information is not provided it is assumed that the erase flash access code is position independent and that therefore the RAM position can be freely configured.
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:f7414dff-fefb-4f6d-b93e-78f51f5191ed"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                     <a:tst expr="&lt;=0"/>
                     <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsAcLocationWrite" type="INTEGER_LABEL">
                 <a:a name="LABEL" value="Fls Access Code Location Write"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>
                      Position in RAM, to which the write flash access code has to be loaded. 
                    Only relevant if the write flash access code is not position independent. If this information is not provided it is assumed that the write flash access code is position independent and that therefore the RAM position can be freely configured.
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:647f748c-8911-4a8e-97a5-54b91a1d56aa"/>
                  <a:da name="DEFAULT" value="0"/>
                   <a:da name="INVALID" type="Range">
                     <a:tst expr="&lt;=0"/>
                     <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsAcSizeErase" type="INTEGER_LABEL">
                     <a:a name="LABEL" value="Fls Access Code Size Erase"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>
                      Number of bytes in RAM needed for the erase flash access code. 
                    </p></html>]]>
                    </a:v>
                    </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:b1abb2b0-75a5-4580-be26-68ba1e0ac733"/>
                  <a:da name="DEFAULT" value="84"/>
                  <a:da name="INVALID" type="Range">
                     <a:tst expr="&lt;=84"/>
                     <a:tst expr="&gt;=84"/>
                  </a:da>
                </v:var>
                <v:var name="FlsAcSizeWrite" type="INTEGER_LABEL">
                 <a:a name="LABEL" value="Fls Access Code Size Write"/>
                  <a:a name="DESC" >
                    <a:v>
                    <![CDATA[<html><p>
                       Number of bytes in RAM needed for the write flash access code. 
                    </p></html>]]>
                    </a:v>
                    </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:efaf2767-3a74-4021-9352-994bd93a68d6"/>
                  <a:da name="DEFAULT" value="84"/>
                  <a:da name="INVALID" type="Range">
                     <a:tst expr="&lt;=84"/>
                     <a:tst expr="&gt;=84"/>
                  </a:da>
                </v:var>
                <v:var name="FlsEraseTime" type="FLOAT_LABEL">
                 <a:a name="LABEL" value="Fls Erase Time"/>
                  <a:a name="DESC">
                        <a:v>
                        <![CDATA[<html><p>
                           Maximum time to erase one complete flash sector [sec].
                           <br><b>Note</b>&nbsp;&nbsp;This value can be found on DS as the maximum erase time occurs after the specified number of program/erase cycles .
                         </p></html>]]>
                        </a:v>
                        </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:fb657732-fa35-46bc-aa27-d3e9680033c0"/>
                  <a:da name="DEFAULT" value="5.0"/>
                  <a:da name="INVALID" type="Range">
                     <a:tst expr="&lt;=5.0"/>
                     <a:tst expr="&gt;=5.0"/>
                  </a:da>
                </v:var>
                <v:var name="FlsErasedValue" type="INTEGER_LABEL">
                  <a:a name="LABEL" value="Fls Erased Value"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>
                       The contents of an erased flash memory cell. 
                    </p></html>]]>
                    </a:v>
                    </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:f89f0849-c08f-4e97-ba8f-f8afb26a40e2"/>
                  <a:da name="DEFAULT" value="4294967295"/>
                   <a:da name="INVALID" type="Range">
                     <a:tst expr="&lt;=4294967295"/>
                     <a:tst expr="&gt;=4294967295"/>
                  </a:da>
                </v:var>
                <v:var name="FlsExpectedHwId" type="STRING_LABEL">
                      <a:a name="LABEL" value="Fls Expected Hw Id"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>
                      Unique identifier of the hardware device that is expected by this driver (the device for which this driver has been implemented).
                    Only relevant for external flash drivers.
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:3bd55916-1936-45ba-8765-df68367cb5ac"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="FlsSpecifiedEraseCycles" type="INTEGER_LABEL">
                  <a:a name="LABEL" value="Fls Specified Erase Cycles"/>
                  <a:a name="DESC">
                    <a:v>
                    <![CDATA[<html><p>
                      Number of erase cycles specified for the flash device (usually given in the device data sheet).
                    FLS198: If the number of specified erase cycles depends on the operating environment (temperature, voltage, ...) during reprogramming of the flash device, the minimum number for which a data retention of at least 15 years over the temperature range from -40C .. +125C can be guaranteed shall be given.
                    <br><b>Note</b>&nbsp;&nbsp; If there are different numbers of specified erase cycles for different flash sectors of the device this parameter has to be extended to a parameter list (similar to the sector list above).
                    </p></html>]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:25091e2f-8a4f-421f-b084-152a43658b85"/>
                  <a:da name="DEFAULT" value="100000"/>
                   <a:da name="INVALID" type="Range">
                     <a:tst expr="&lt;=100000"/>
                     <a:tst expr="&gt;=100000"/>
                  </a:da>
                </v:var>
                <v:var name="FlsWriteTime" type="FLOAT_LABEL">
                    <a:a name="LABEL" value="Fls Write Time"/>
                  <a:a name="DESC">
                        <a:v>
                            <![CDATA[<html><p>
                              Maximum time to program one complete flash page [sec]. 
                            </p></html>]]>
                        </a:v>
                    </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:4ced1ce0-656b-493c-8b24-4bed303a5664"/>
                  <a:da name="DEFAULT" value="0.0005"/>
                  <a:da name="INVALID" type="Range">
                     <a:tst expr="&lt;=0.0005"/>
                     <a:tst expr="&gt;=0.0005"/>
                  </a:da>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>
</datamodel>
