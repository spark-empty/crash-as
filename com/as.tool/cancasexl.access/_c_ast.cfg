'''
    This is a patch of pycparser 2.10 for convert c types to python ctypes  automatically
    for the purpose to access some DLL on windows
'''
class Node(object):
    def __get_type_decl_type(self,decl):
        if(type(decl.type)==IdentifierType):
            attrstr = ''.join('%s' % v for v in decl.type.names)
            if(attrstr.find('unsigned')!=-1):
                attrstr ='ctypes.c_%s'%(attrstr.replace('unsigned', 'u').replace('char', 'byte'))
            elif(attrstr=='short' or attrstr=='long'):
                attrstr ='ctypes.c_%s\n'%(attrstr)
            return attrstr
        else:
            return decl.declname

    def ctopy(self, buf=sys.stdout):
        if(type(self)==Decl and type(self.type)==Enum):
            buf.write('%s=ctypes.c_uint\n'%(self.type.name))
            if(self.name):buf.write('%s=%s\n'%(self.name,self.type.name))
        elif(type(self)==Typedef and type(self.type)==TypeDecl):
            self.type.ctopy(buf)
        elif(type(self)==TypeDecl and type(self.type)==IdentifierType):
            attrstr = ''.join('%s' % v for v in self.type.names)
            if(attrstr.find('unsigned')!=-1):
                buf.write('%s=ctypes.c_%s\n'%(self.declname,attrstr.replace('unsigned', 'u').replace('char', 'byte')))
            elif(attrstr=='short' or attrstr=='long'):
                buf.write('%s=ctypes.c_%s\n'%(self.declname,attrstr))
            else:
                buf.write('%s=%s\n'%(self.declname,attrstr))
        elif(type(self)==TypeDecl and type(self.type)==Struct):
            self.type.ctopy(buf)
            buf.write('%s=%s\n'%(self.declname,self.type.name))
        elif(type(self)==Struct):
            buf.write('class %s(ctypes.Structure):\n\t_fields_ = ['%(self.name))
            if(self.decls==None):
                return
            for decl in self.decls:
                if(decl!=None and type(decl.type)==TypeDecl):
                    attrstr = self.__get_type_decl_type(decl.type)
                    buf.write('("%s",%s)\n\t\t\t'%(decl.name,attrstr))
            buf.write('\t]\n\n')