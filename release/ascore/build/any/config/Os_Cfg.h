/*
* Configuration of module: Os
*
* Created by:   parai
* Copyright:    (C)parai@foxmail.com  
*
* Configured for (MCU):    posix
*
* Module vendor:           askar
* Generator version:       01.00
*
* Generated by easySAR Studio (https://github.com/parai/as)
*/
#ifndef OS_CFG_H_
#define OS_CFG_H_

/* ============================ [ INCLUDES  ] ====================================================== */
#ifndef MACROS_ONLY
#include "kernel.h"
#endif
/* ============================ [ MACROS    ] ====================================================== */
#define __ASKAR_OS__

#define OS_USE_ERROR_HOOK
#define OS_USE_STARTUP_HOOK
#define OS_USE_SHUTDOWN_HOOK
#define OS_USE_PRETASK_HOOK
#define OS_USE_POSTTASK_HOOK
#ifndef USE_PTHREAD
#define OS_PTHREAD_NUM 0
#define OS_PTHREAD_PRIORITY 0
#endif
#ifndef OS_PTHREAD_NUM
#define OS_PTHREAD_NUM 32
#endif
#ifndef OS_PTHREAD_PRIORITY
#define OS_PTHREAD_PRIORITY 32
#endif
#define OS_STATUS EXTENDED


#define PRIORITY_NUM (OS_PTHREAD_PRIORITY+9)
#define ACTIVATION_SUM (12+OS_PTHREAD_NUM)
#define MULTIPLY_TASK_PER_PRIORITY
#define SEQUENCE_MASK 0x7u
#define SEQUENCE_SHIFT 3
#define MULTIPLY_TASK_ACTIVATION


#define TASK_ID_TaskApp                          0   /* priority = 5 */
#define TASK_ID_TaskCanIf                        1   /* priority = 9 */
#define TASK_ID_TaskNmInd                        2   /* priority = 7 */
#define TASK_ID_TaskIdle                         3   /* priority = 0 */
#define TASK_ID_TaskShell                        4   /* priority = 1 */
#define TASK_ID_SchM_Startup                     5   /* priority = 7 */
#define TASK_ID_SchM_BswService                  6   /* priority = 8 */
#define TASK_NUM                                 7

#define EVENT_MASK_TaskApp_Event1                           0x01
#define EVENT_MASK_TaskApp_Event2                           0x02
#define EVENT_MASK_TaskApp_Event3                           0x04
#define EVENT_MASK_TaskApp_Event4                           0x08
#define EVENT_MASK_TaskApp_Event5                           0x10
#define EVENT_MASK_TaskNmInd_EventNmNormal                  0x01
#define EVENT_MASK_TaskNmInd_EventNmLimphome                0x02
#define EVENT_MASK_TaskNmInd_EventNmStatus                  0x04
#define EVENT_MASK_TaskNmInd_EventRingData                  0x08
#define EVENT_MASK_TaskShell_EventShellInput                0x00000001


#define EXTENDED_TASK

#define RESOURCE_NUM 2

#define COUNTER_ID_OsClock                          0
#define COUNTER_NUM                                 1

#define ALARM_ID_AlarmApp                         0
#define ALARM_ID_Alarm_BswService                 1
#define ALARM_NUM                                 2

#define ISR_NUM  0



/* ============================ [ TYPES     ] ====================================================== */
/* ============================ [ DECLARES  ] ====================================================== */
/* ============================ [ DATAS     ] ====================================================== */
#ifndef MACROS_ONLY
DeclareTask(TaskApp);
DeclareTask(TaskCanIf);
DeclareTask(TaskNmInd);
DeclareTask(TaskIdle);
DeclareTask(TaskShell);
DeclareTask(SchM_Startup);
DeclareTask(SchM_BswService);

DeclareEvent(Event1);
DeclareEvent(Event2);
DeclareEvent(Event3);
DeclareEvent(Event4);
DeclareEvent(Event5);
DeclareEvent(EventNmNormal);
DeclareEvent(EventNmLimphome);
DeclareEvent(EventNmStatus);
DeclareEvent(EventRingData);
DeclareEvent(EventShellInput);


DeclareCounter(OsClock);

DeclareAlarm(AlarmApp);
DeclareAlarm(Alarm_BswService);
#endif
/* ============================ [ LOCALS    ] ====================================================== */
/* ============================ [ FUNCTIONS ] ====================================================== */
#ifndef MACROS_ONLY
extern TASK(TaskApp);
extern TASK(TaskCanIf);
extern TASK(TaskNmInd);
extern TASK(TaskIdle);
extern TASK(TaskShell);
extern TASK(SchM_Startup);
extern TASK(SchM_BswService);


extern ALARM(AlarmApp);
extern ALARM(Alarm_BswService);


#endif
#endif /*OS_CFG_H_*/

